class DBHelper{static get DATABASE_URL(){return"http://localhost:1337"}static readDB(e){let t=window.indexedDB.open("restaurant-review-db",1);t.onsuccess=(t=>{t.target.result.transaction("keyval").objectStore("keyval").get("restaurants").onsuccess=function(t){t.target.result?e(null,t.target.result):DBHelper.fetchRestaurantsFromServer(e)}}),t.onerror=function(e){console.log("failed to open indexedDB in readDB")}}static addToDB(e){let t=window.indexedDB.open("restaurant-review-db",1);t.onsuccess=(t=>{t.target.result.transaction("keyval","readwrite").objectStore("keyval").put(e,"restaurants")}),t.onerror=function(e){console.log("failed to open indexedDB in addToDB")}}static clearDB(){let e=window.indexedDB.open("restaurant-review-db",1);e.onsuccess=(e=>{e.target.result.transaction("keyval","readwrite").objectStore("keyval").put(null,"restaurants")}),e.onerror=function(e){console.log("failed to open indexedDB in addToDB")}}static updateFavorites(e,t=!1){let n=window.indexedDB.open("restaurant-review-db",1);n.onsuccess=(n=>{var a=n.target.result.transaction("keyval","readwrite").objectStore("keyval");a.get("restaurants").onsuccess=function(n){if(n.target.result){let r=n.target.result;r[parseInt(e)-1].is_favorite=t,a.put(r,"restaurants")}else console.error("data not in DB")}}),n.onerror=function(e){console.log("failed to open indexedDB in addToDB")}}static addToDBOffline(e){let t=window.indexedDB.open("restaurant-review-db",1);t.onsuccess=function(t){var n=t.target.result.transaction("keyval","readwrite").objectStore("keyval");n.get("restaurants").onsuccess=function(t){if(t.target.result){let a=t.target.result;const r=DBHelper.getReviewToAdd(e);a[parseInt(e.restaurant_id)-1].reviews.push(r),n.put(a,"restaurants")}else console.error("data not in DB")},n.get("offlineReviews").onsuccess=function(t){const a={restaurant_id:e.restaurant_id,name:e.name,rating:e.rating,comment:e.comment};if(t.target.result){const e=[...t.target.result,a];n.put(e,"offlineReviews")}else n.put([a],"offlineReviews")}},t.onerror=function(e){console.error("failed to open indexedDB in addToDBOffline")}}static getReviewToAdd(e){const t=new Date(e.createdAt).toDateString().split(" "),n=`${t[1]} ${t[2]}, ${t[3]}`;return{name:e.name,date:n,rating:e.rating,comments:e.comment}}static fetchRestaurantsFromServer(e){const t=fetch(`${DBHelper.DATABASE_URL}/reviews`),n=fetch(`${DBHelper.DATABASE_URL}/restaurants`);Promise.all([t,n]).then(t=>{const n=t[0].json(),a=t[1].json();Promise.all([n,a]).then(t=>{const n=t[0];let a=t[1];n.forEach(e=>{const t=DBHelper.getReviewToAdd(e),n=parseInt(e.restaurant_id)-1;a[n].reviews.push(t)}),DBHelper.addToDB(a),e(null,a)}).catch(t=>e(t,null))}).catch(t=>e(t,null))}static fetchRestaurants(e){DBHelper.readDB(e)}static fetchRestaurantById(e,t){DBHelper.fetchRestaurants((n,a)=>{if(n)t(n,null);else{const n=a.find(t=>t.id==e);n?t(null,n):t("Restaurant does not exist",null)}})}static fetchRestaurantByCuisine(e,t){DBHelper.fetchRestaurants((n,a)=>{if(n)t(n,null);else{const n=a.filter(t=>t.cuisine_type==e);t(null,n)}})}static fetchRestaurantByNeighborhood(e,t){DBHelper.fetchRestaurants((n,a)=>{if(n)t(n,null);else{const n=a.filter(t=>t.neighborhood==e);t(null,n)}})}static fetchRestaurantByCuisineAndNeighborhood(e,t,n){DBHelper.fetchRestaurants((a,r)=>{if(a)n(a,null);else{let a=r;"all"!=e&&(a=a.filter(t=>t.cuisine_type==e)),"all"!=t&&(a=a.filter(e=>e.neighborhood==t)),n(null,a)}})}static fetchNeighborhoods(e){DBHelper.fetchRestaurants((t,n)=>{if(t)e(t,null);else{const t=n.map((e,t)=>n[t].neighborhood),a=t.filter((e,n)=>t.indexOf(e)==n);e(null,a)}})}static fetchCuisines(e){DBHelper.fetchRestaurants((t,n)=>{if(t)e(t,null);else{const t=n.map((e,t)=>n[t].cuisine_type),a=t.filter((e,n)=>t.indexOf(e)==n);e(null,a)}})}static urlForRestaurant(e){return`./restaurant.html?id=${e.id}`}static imageUrlForRestaurant(e){return`/img/${e.photograph}.webp`}static mapMarkerForRestaurant(e,t){return new google.maps.Marker({position:e.latlng,title:e.name,url:DBHelper.urlForRestaurant(e),map:t,animation:google.maps.Animation.DROP})}}let restaurant;var map;updateOnlineStatus=(e=>{const t=navigator.onLine?"online":"offline";document.getElementById("connection-status").innerHTML=`Currently ${t}`}),window.addEventListener("online",updateOnlineStatus),window.addEventListener("offline",updateOnlineStatus),document.addEventListener("DOMContentLoaded",e=>{updateOnlineStatus(),fetchRestaurantFromURL((e,t)=>{e?console.error(e):(fillBreadcrumb(),DBHelper.mapMarkerForRestaurant(self.restaurant,self.map))})}),fetchRestaurantFromURL=(e=>{if(self.restaurant)return void e(null,self.restaurant);const t=getParameterByName("id");t?DBHelper.fetchRestaurantById(t,(t,n)=>{self.restaurant=n,n?(fillRestaurantHTML(),e(null,n)):console.error(t)}):(error="No restaurant id in URL",e(error,null))}),fillRestaurantHTML=((e=self.restaurant)=>{const t=document.getElementById("restaurant-container"),n=document.createElement("label");n.htmlFor=`favorite-checkbox-${e.id}`,n.id=`favorite-display-${e.id}`,n.innerHTML=e.is_favorite?"is favorite":"is not favorite";const a=document.createElement("span");a.innerHTML=e.is_favorite?"&#x2605":"";const r=document.createElement("input");r.id=`favorite-checkbox-${e.id}`,r.type="checkbox",r.checked=e.is_favorite,r.addEventListener("change",function(){let t=this.checked;fetch(`http://localhost:1337/restaurants/${e.id}/?is_favorite=${t}`,{method:"put"}).then(()=>{document.querySelector(`#favorite-display-${e.id}`).innerHTML=t?"is favorite":"is not favorite",a.innerHTML=t?"&#x2605":"",DBHelper.updateFavorites(e.id,t)})});const o=document.createElement("div");o.id=`favorite-container-${e.id}`,o.appendChild(r),o.appendChild(n),o.appendChild(a);const s=document.getElementById("restaurant-name");s.innerHTML=e.name,t.insertBefore(o,s),document.getElementById("restaurant-address").innerHTML=e.address;const i=document.getElementById("restaurant-img");i.className="restaurant-img",i.alt=e.name,i.src=DBHelper.imageUrlForRestaurant(e),document.getElementById("restaurant-cuisine").innerHTML=e.cuisine_type,e.operating_hours&&fillRestaurantHoursHTML(),fillReviewsHTML(),fillCommentRestaurantID()}),fillRestaurantHoursHTML=((e=self.restaurant.operating_hours)=>{const t=document.getElementById("restaurant-hours");for(let n in e){const a=document.createElement("tr"),r=document.createElement("td");r.innerHTML=n,a.appendChild(r);const o=document.createElement("td");o.innerHTML=e[n],a.appendChild(o),t.appendChild(a)}}),fillReviewsHTML=((e=self.restaurant.reviews)=>{const t=document.getElementById("reviews-container"),n=document.createElement("h3");if(n.innerHTML="Reviews",t.appendChild(n),!e){const e=document.createElement("p");return e.innerHTML="No reviews yet!",void t.appendChild(e)}const a=document.getElementById("reviews-list");e.forEach(e=>{a.appendChild(createReviewHTML(e))}),t.appendChild(a)}),createReviewHTML=(e=>{const t=document.createElement("li");t.tabIndex="0";const n=document.createElement("p");n.className="reviews-list-name",n.innerHTML=e.name,t.appendChild(n);const a=document.createElement("p");a.innerHTML=e.date,t.appendChild(a);const r=document.createElement("div");r.className="name-date-container",r.appendChild(n),r.appendChild(a),t.appendChild(r);const o=document.createElement("div");o.className="rating-container";const s=document.createElement("p");s.innerHTML=`Rating: ${e.rating}`,o.appendChild(s),t.appendChild(o);const i=document.createElement("p");return i.innerHTML=e.comments,t.appendChild(i),t}),fillBreadcrumb=((e=self.restaurant)=>{const t=document.getElementById("breadcrumb"),n=document.createElement("li");n.innerHTML=e.name,t.appendChild(n)}),getParameterByName=((e,t)=>{t||(t=window.location.href),e=e.replace(/[\[\]]/g,"\\$&");const n=new RegExp(`[?&]${e}(=([^&#]*)|&|#|$)`).exec(t);return n?n[2]?decodeURIComponent(n[2].replace(/\+/g," ")):"":null}),fillCommentRestaurantID=((e=self.restaurant.id)=>{document.getElementById("restaurant-id").value=e}),postComment=((e=self.restaurant.id)=>{const t=e,n=document.getElementById("user-name").value,a=document.getElementById("user-rating").value,r=document.getElementById("user-comment").value;let o=new FormData;if(o.append("restaurant_id",t),o.append("name",n),o.append("rating",a),o.append("comment",r),navigator.onLine)fetch("http://localhost:1337/reviews/",{method:"post",body:o}).then(t=>{DBHelper.clearDB(),window.location.href=`http://localhost:3000/restaurant.html?id=${e}`});else{const e={restaurant_id:t,name:n,rating:a,comment:r,createdAt:new Date};DBHelper.addToDBOffline(e)}}),initMap=(()=>{fetchRestaurantFromURL((e,t)=>{e?console.error(e):(self.map=new google.maps.Map(document.getElementById("map"),{zoom:16,center:t.latlng,scrollwheel:!1}),fillBreadcrumb(),DBHelper.mapMarkerForRestaurant(self.restaurant,self.map))})}),loadMapOnClick=(e=>{e.preventDefault(),initMap()});